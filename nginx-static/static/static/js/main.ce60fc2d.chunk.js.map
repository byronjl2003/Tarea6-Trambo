{"version":3,"sources":["assets/img/logoUsac.png","components/UnidadScreen/UnidadScreen.jsx","components/UsuarioScreen/UsuarioScreen.jsx","App.jsx","serviceWorker.js","components/LoginScreen/LoginScreen.jsx","hooks/useForm.js","components/RecoverScreen/RecoverScreen.jsx","routers/AuthRouter.jsx","types/types.js","reducers/authReducer.js","reducers/uiReducer.js","store/store.js","index.jsx"],"names":["module","exports","UnidadScreen","UsuarioScreen","className","App","useState","collapsed","setCollapsed","Header","Layout","Content","Sider","Footer","items","Menu","SubMenu","useSelector","state","ui","console","log","style","minHeight","maxHeight","padding","theme","mode","defaultSelectedKeys","Item","key","collapsible","onCollapse","map","item","index","icon","PieChartOutlined","to","name","margin","path","component","exact","Boolean","window","location","hostname","match","LoginScreen","initialState","values","setValues","reset","handleInputChange","target","value","useForm","correo","pass","formValues","action","type","placeholder","onChange","href","src","logo","alt","RecoverScreen","AuthRouter","types","token","sidebarActivate","lastindex","activate","subitems","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","payload","slice","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ce60fc2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoUsac.209c1aff.png\";","import React from 'react'\n\nexport const UnidadScreen = () => {\n    return (\n        <div>\n            <h1>UnidadScreen</h1>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const UsuarioScreen = () => {\n    return (\n        <div className=\"wrapper\">\n\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n  LaptopOutlined, NotificationOutlined,\n} from '@ant-design/icons';\n\n\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { AppRouter } from './routers/AppRouter';\nimport { UnidadScreen } from './components/UnidadScreen/UnidadScreen';\nimport { UsuarioScreen } from './components/UsuarioScreen/UsuarioScreen';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction App() {\n\n  const [collapsed, setCollapsed] = useState(true);\n  const { Header, Content, Footer, Sider } = Layout;\n  const { SubMenu } = Menu;\n\n  const items = useSelector(state => state.ui.items);\n  console.log(items);\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n\n      <Layout style={{ minHeight: '90vh', maxHeight: '100vh' }}>\n        <Header className=\"header\" style={{ padding: 0 }} >\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n            <Menu.Item key=\"1\">nav 1</Menu.Item>\n            <Menu.Item key=\"2\">nav 2</Menu.Item>\n            <Menu.Item key=\"3\">nav 3</Menu.Item>\n          </Menu>\n        </Header>\n        <Layout className=\"site-layout\">\n\n          <Sider collapsible collapsed={collapsed} onCollapse={setCollapsed}>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n              {\n                items.map((item, index) => {\n\n                  return (\n\n\n                    <Menu.Item key={index} icon={<PieChartOutlined />}>\n                      <Link to={\"/usuarios\"}>\n                        {item.name}\n                      </Link>\n\n\n                    </Menu.Item>\n\n\n\n                  );\n\n\n\n\n\n                })\n              }\n              {/* <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n            <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\n              Option 1\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n              Option 2\n            </Menu.Item>\n            <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"User\">\n              <Menu.Item key=\"3\">Tom</Menu.Item>\n              <Menu.Item key=\"4\">Bill</Menu.Item>\n              <Menu.Item key=\"5\">Alex</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\n              <Menu.Item key=\"6\">Team 1</Menu.Item>\n              <Menu.Item key=\"8\">Team 2</Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"9\" icon={<FileOutlined />} /> */}\n            </Menu>\n          </Sider>\n\n\n          <Content style={{ margin: '0 16px' }}>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n              <Breadcrumb.Item>User</Breadcrumb.Item>\n              <Breadcrumb.Item>Bill</Breadcrumb.Item>\n            </Breadcrumb>\n            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n              <main>\n                <Switch>\n                  <Route path=\"/\" component={UnidadScreen} exact />\n                  <Route path=\"/usuarios\" component={UsuarioScreen} />\n                  <Route path=\"/unidades\" component={UnidadScreen} />\n                </Switch>\n              </main>\n\n            </div>\n          </Content>\n\n        </Layout>\n\n      </Layout>\n\n      {/* <Layout style={{ minHeight: '10vh', maxHeight: '10vh' }}>\n        <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n      </Layout> */}\n    </Layout>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './LoginScreen.css';\nimport logo from '../../assets/img/logoUsac.png';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const [formValues, handleInputChange, reset] = useForm({\n        correo: '',\n        pass: ''\n\n    });\n    const { correo, pass } = formValues;\n    return (\n        <div className=\"container\">\n            <div className=\"forms-container\">\n                <div className=\"signin-signup\">\n                    <form action=\"#\" className=\"sign-in-form\">\n                        <h2 className=\"title\">Ingresa</h2>\n                        <div className=\"input-field\">\n                            <i className=\"fas fa-user\"></i>\n                            <input type=\"text\" placeholder=\"Correo\" name=\"correo\" value={correo} onChange={handleInputChange} />\n                        </div>\n                        <div className=\"input-field\">\n                            <i className=\"fas fa-lock\"></i>\n                            <input type=\"password\" placeholder=\"Contraseña\" name=\"pass\" value={pass} onChange={handleInputChange} />\n                        </div>\n                        <input type=\"submit\" value=\"Ingresar\" className=\"btn solid\" />\n\n                    </form>\n                    <form action=\"#\" className=\"sign-up-form\">\n                        <h2 className=\"title\">Sign up</h2>\n                        <div className=\"input-field\">\n                            <i className=\"fas fa-user\"></i>\n                            <input type=\"text\" placeholder=\"Username\" />\n                        </div>\n                        <div className=\"input-field\">\n                            <i className=\"fas fa-envelope\"></i>\n                            <input type=\"email\" placeholder=\"Email\" />\n                        </div>\n                        <div className=\"input-field\">\n                            <i className=\"fas fa-lock\"></i>\n                            <input type=\"password\" placeholder=\"Password\" />\n                        </div>\n                        <input type=\"submit\" className=\"btn\" value=\"Sign up\" />\n                        <p className=\"social-text\">Or Sign up with social platforms</p>\n                        <div className=\"social-media\">\n                            <a href=\"#\" className=\"social-icon\">\n                                <i className=\"fab fa-facebook-f\"></i>\n                            </a>\n                            <a href=\"#\" className=\"social-icon\">\n                                <i className=\"fab fa-twitter\"></i>\n                            </a>\n                            <a href=\"#\" className=\"social-icon\">\n                                <i className=\"fab fa-google\"></i>\n                            </a>\n                            <a href=\"#\" className=\"social-icon\">\n                                <i className=\"fab fa-linkedin-in\"></i>\n                            </a>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <div className=\"panels-container\">\n                <div className=\"panel left-panel\">\n                    <div className=\"content\">\n                        <h3>Universidad de San Carlos de Guatemala</h3>\n                        <p>\n                            Plataforma para el clima laboral.\n                    </p>\n\n                    </div>\n                    <img src={logo} className=\"image\" alt=\"\" />\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react'\n\nexport const RecoverScreen = () => {\n    return (\n        <div>\n            <h1>RecoverScreen</h1>\n        </div>\n    )\n}\n","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n    Route\n} from 'react-router-dom';\nimport { LoginScreen } from '../components/LoginScreen/LoginScreen';\nimport { RecoverScreen } from '../components/RecoverScreen/RecoverScreen';\nimport { NotFoundScreen } from '../components/NotFoundScreen/NotFoundScreen';\nimport App from '../App';\n\nexport const AuthRouter = () => {\n    return (\n        <Router>\n            <div>\n\n                <Switch>\n                    <Route path=\"/login\" component={LoginScreen} exact />\n                    <Route path=\"/recuperacion\" component={RecoverScreen} exact />\n                    <Route path=\"/\" component={LoginScreen} exact />\n                    <Route path=\"**\" component={App} />\n\n\n\n                </Switch>\n\n            </div>\n        </Router>\n    )\n}\n","export const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    uiOpenSideBar: '[UI] Open sidebar',\n    uiCloseSideBar: '[UI] Close sidebar',\n\n    uiActivateItem: '[UI] Activate item',\n    /*  uiDeactivateItem: '[UI] Deactivate item' */\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    token: 'ANONYMUS',\n    name: 'ANONYMUS',\n\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.login:\n            {\n                return {\n                    token: action.payload.token,\n                    name: action.payload.name\n                }\n            }\n        default:\n            return state;\n    }\n}","import { types } from '../types/types';\nconst initialState = {\n    sidebarActivate: false,\n    lastindex: -1,\n    items: [{\n        name: \"ADMINISTRACION\",\n        activate: false,\n\n\n    },\n    {\n        name: \"FORMULARIOS\",\n        activate: false,\n\n\n    },\n    {\n        name: \"CUESTIONARIOS\",\n        activate: false,\n\n\n    }\n    ],\n    subitems: [\n        {\n            items: [\n                {\n                    name: \"UNIDADES\",\n                    activate: false,\n                },\n                {\n                    name: \"USUARIOS\",\n                    activate: false,\n                }\n            ]\n        },\n        {\n            items: [\n                {\n                    name: \"Factores clima\",\n                    activate: false,\n                },\n                {\n                    name: \"factores estadisticos\",\n                    activate: false,\n                },\n                {\n                    name: \"Formularios\",\n                    activate: false,\n                }\n            ]\n        },\n        {\n            items: []\n        }\n\n    ]\n}\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiOpenSideBar:\n\n            return {\n                ...state,\n                sidebarActivate: !state.sidebarActivate\n            };\n        case types.uiCloseSideBar:\n            return {\n                ...state,\n                sidebarActivate: false\n            };\n        case types.uiActivateItem:\n            {\n                if (state.lastindex != -1) {\n                    state.items[state.lastindex].activate = false;\n\n                }\n                state.lastindex = action.payload;\n                return {\n                    ...state,\n                    items: [\n                        ...state.items.slice(0, state.lastindex),\n                        {\n                            ...state.items[state.lastindex],\n                            activate: true\n                        },\n                        ...state.items.slice(state.lastindex + 1)\n                    ]\n\n                };\n\n\n            }\n        default:\n            {\n                return state;\n            }\n        /*  case types.uiDeactivateItem:\n{\n \n}\n*/\n\n\n\n    }\n\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer\n});\n\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import { BrowserRouter as Router } from 'react-router-dom';\nimport \"core-js/stable\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { LoginScreen } from './components/LoginScreen/LoginScreen';\nimport { AuthRouter } from './routers/AuthRouter';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <AuthRouter></AuthRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}